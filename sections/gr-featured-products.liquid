{% comment %}
  Sección de productos destacados
{% endcomment %}

<div class="gr-featured-products-section" id="gr-featured-products-container">
  <div class="page-width">
    {% if section.settings.title != blank %}
      <h2 class="gr-section-title">{{ section.settings.title }}</h2>
    {% endif %}
    
    {% if section.settings.description != blank %}
      <div class="gr-section-description">{{ section.settings.description }}</div>
    {% endif %}
    
    <div class="gr-products-loading">Cargando productos...</div>
    
    <div class="gr-products-grid" style="display: none;">
      <!-- Los productos se cargarán aquí dinámicamente -->
    </div>
    
    {% if section.settings.view_all_text != blank and section.settings.view_all_link != blank %}
      <div class="gr-products-footer">
        <a href="{{ section.settings.view_all_link }}" class="gr-view-all-link">{{ section.settings.view_all_text }}</a>
      </div>
    {% endif %}
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const productsContainer = document.getElementById('gr-featured-products-container');
    const loadingElement = productsContainer.querySelector('.gr-products-loading');
    const productsGrid = productsContainer.querySelector('.gr-products-grid');
    
    // Función para cargar productos
    const loadProducts = () => {
      // Obtener productos de la colección especificada
      fetch('/collections/{{ section.settings.collection }}/products.json?limit={{ section.settings.max_products }}')
        .then(response => response.json())
        .then(data => {
          loadingElement.style.display = 'none';
          
          if (!data.products || data.products.length === 0) {
            productsGrid.innerHTML = '<p>No hay productos disponibles.</p>';
            productsGrid.style.display = 'block';
            return;
          }
          
          // Crear HTML para cada producto
          let productsHTML = '';
          
          data.products.forEach(product => {
            // Obtener la primera variante disponible
            const firstVariant = product.variants[0];
            
            // Calcular si hay descuento
            const hasDiscount = firstVariant.compare_at_price && firstVariant.compare_at_price > firstVariant.price;
            
            // Calcular porcentaje de descuento
            let discountBadge = '';
            if (hasDiscount) {
              const discountPercentage = Math.round((1 - firstVariant.price / firstVariant.compare_at_price) * 100);
              if (discountPercentage > 0) {
                discountBadge = `<span class="gr-product-discount">-${discountPercentage}%</span>`;
              }
            }
            
            // Verificar si el producto está agotado
            const isAvailable = product.available;
            const soldOutBadge = !isAvailable ? '<span class="gr-product-sold-out">{{ section.settings.sold_out_text }}</span>' : '';
            
            // Crear estrellas de valoración (simuladas)
            const rating = Math.floor(Math.random() * 5) + 1; // Simulación de valoración entre 1 y 5
            let starsHTML = '';
            for (let i = 1; i <= 5; i++) {
              if (i <= rating) {
                starsHTML += '<span class="gr-star gr-star-filled">★</span>';
              } else {
                starsHTML += '<span class="gr-star">★</span>';
              }
            }
            
            productsHTML += `
              <div class="gr-product-card">
                <div class="gr-product-image">
                  ${discountBadge}
                  ${soldOutBadge}
                  <a href="/products/${product.handle}">
                    <img src="${product.featured_image ? product.featured_image : '/placeholder.svg?height=300&width=300'}" alt="${product.title}" loading="lazy">
                  </a>
                  <div class="gr-product-actions">
                    <button class="gr-wishlist-button" data-product-id="${product.id}" aria-label="Añadir a favoritos">
                      <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                        <path d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z"></path>
                      </svg>
                    </button>
                    <button class="gr-quickview-button" data-product-id="${product.id}" aria-label="Vista rápida">
                      <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                        <path d="M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z"></path>
                        <circle cx="12" cy="12" r="3"></circle>
                      </svg>
                    </button>
                  </div>
                </div>
                <div class="gr-product-content">
                  <h3 class="gr-product-title">
                    <a href="/products/${product.handle}">${product.title}</a>
                  </h3>
                  <div class="gr-product-price">
                    ${hasDiscount ? `
                      <span class="gr-product-price-sale">${formatMoney(firstVariant.price)}</span>
                      <span class="gr-product-price-compare">${formatMoney(firstVariant.compare_at_price)}</span>
                    ` : `
                      <span class="gr-product-price-regular">${formatMoney(firstVariant.price)}</span>
                    `}
                  </div>
                  <div class="gr-product-rating">
                    <div class="gr-stars">
                      ${starsHTML}
                    </div>
                    <span class="gr-rating-count">(${Math.floor(Math.random() * 50) + 1})</span>
                  </div>
                  <button class="gr-add-to-cart-button" data-product-id="${product.id}" data-variant-id="${firstVariant.id}" ${!isAvailable ? 'disabled' : ''}>
                    ${isAvailable ? section.settings.add_to_cart_text : section.settings.sold_out_text}
                  </button>
                </div>
              </div>
            `;
          });
          
          productsGrid.innerHTML = productsHTML;
          productsGrid.style.display = 'grid';
          
          // Inicializar botones de lista de deseos
          initWishlistButtons();
          
          // Inicializar botones de añadir al carrito
          initAddToCartButtons();
          
          // Inicializar botones de vista rápida
          initQuickviewButtons();
        })
        .catch(error => {
          console.error('Error al cargar productos:', error);
          loadingElement.textContent = 'Error al cargar los productos.';
        });
    };
    
    // Función para formatear precio
    const formatMoney = (cents) => {
      return (cents / 100).toLocaleString('es-ES', {
        style: 'currency',
        currency: '{{ cart.currency.iso_code }}'
      });
    };
    
    // Inicializar botones de lista de deseos
    const initWishlistButtons = () => {
      document.querySelectorAll('.gr-wishlist-button').forEach(button => {
        button.addEventListener('click', function() {
          const productId = this.dataset.productId;
          
          // Si tenemos la API de Granito disponible
          if (window.granitoAPI) {
            if (this.classList.contains('in-wishlist')) {
              window.granitoAPI.removeFromWishlist(productId)
                .then(() => {
                  this.classList.remove('in-wishlist');
                })
                .catch(error => {
                  console.error('Error al eliminar de la lista de deseos:', error);
                });
            } else {
              window.granitoAPI.addToWishlist(productId)
                .then(() => {
                  this.classList.add('in-wishlist');
                })
                .catch(error => {
                  console.error('Error al añadir a la lista de deseos:', error);
                });
            }
          } else {
            // Simulación simple si no hay API
            this.classList.toggle('in-wishlist');
          }
        });
      });
    };
    
    // Inicializar botones de añadir al carrito
    const initAddToCartButtons = () => {
      document.querySelectorAll('.gr-add-to-cart-button').forEach(button => {
        button.addEventListener('click', function() {
          if (this.disabled) return;
          
          const variantId = this.dataset.variantId;
          
          // Cambiar estado del botón
          const originalText = this.textContent;
          this.disabled = true;
          this.textContent = '{{ section.settings.adding_text }}';
          
          // Añadir al carrito
          fetch('/cart/add.js', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({
              id: variantId,
              quantity: 1
            })
          })
          .then(response => response.json())
          .then(data => {
            // Actualizar carrito
            if (typeof window.updateCartCount === 'function') {
              window.updateCartCount();
            }
            
            // Restaurar botón
            this.disabled = false;
            this.textContent = '{{ section.settings.added_text }}';
            
            setTimeout(() => {
              this.textContent = originalText;
            }, 2000);
          })
          .catch(error => {
            console.error('Error al añadir al carrito:', error);
            this.disabled = false;
            this.textContent = '{{ section.settings.error_text }}';
            
            setTimeout(() => {
              this.textContent = originalText;
            }, 2000);
          });
        });
      });
    };
    
    // Inicializar botones de vista rápida
    const initQuickviewButtons = () => {
      document.querySelectorAll('.gr-quickview-button').forEach(button => {
        button.addEventListener('click', function() {
          const productId = this.dataset.productId;
          
          // Aquí iría la lógica para mostrar la vista rápida
          // Por ahora, simplemente redirigimos al producto
          window.location.href = `/products/${productId}`;
        });
      });
    };
    
    // Cargar productos
    loadProducts();
  });
</script>

<style>
  .gr-featured-products-section {
    margin: 40px 0;
  }
  
  .gr-section-title {
    text-align: center;
    margin-bottom: 10px;
    color: {{ settings.gr_color_principal }};
  }
  
  .gr-section-description {
    text-align: center;
    margin-bottom: 30px;
    max-width: 800px;
    margin-left: auto;
    margin-right: auto;
  }
  
  .gr-products-loading {
    text-align: center;
    padding: 20px;
  }
  
  .gr-products-grid {
    display: grid;
    grid-template-columns: repeat(1, 1fr);
    gap: 20px;
    margin-bottom: 30px;
  }
  
  @media screen and (min-width: 750px) {
    .gr-products-grid {
      grid-template-columns: repeat(2, 1fr);
    }
  }
  
  @media screen and (min-width: 990px) {
    .gr-products-grid {
      grid-template-columns: repeat({{ section.settings.columns_desktop }}, 1fr);
    }
  }
  
  .gr-product-card {
    border: 1px solid #e5e5e5;
    border-radius: 8px;
    overflow: hidden;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
  }
  
  .gr-product-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
  }
  
  .gr-product-image {
    position: relative;
    padding-top: 100%;
    overflow: hidden;
  }
  
  .gr-product-image img {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
  }
  
  .gr-product-card:hover .gr-product-image img {
    transform: scale(1.05);
  }
  
  .gr-product-discount,
  .gr-product-sold-out {
    position: absolute;
    top: 10px;
    left: 10px;
    padding: 5px 10px;
    border-radius: 4px;
    font-size: 0.8em;
    font-weight: bold;
  }
  
  .gr-product-discount {
    background-color: {{ settings.gr_color_principal }};
    color: white;
  }
  
  .gr-product-sold-out {
    background-color: #e53935;
    color: white;
  }
  
  .gr-product-actions {
    position: absolute;
    top: 10px;
    right: 10px;
    display: flex;
    flex-direction: column;
    gap: 10px;
    opacity: 0;
    transform: translateX(10px);
    transition: opacity 0.3s ease, transform 0.3s ease;
  }
  
  .gr-product-card:hover .gr-product-actions {
    opacity: 1;
    transform: translateX(0);
  }
  
  .gr-wishlist-button,
  .gr-quickview-button {
    width: 36px;
    height: 36px;
    border-radius: 50%;
    background-color: white;
    border: none;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    transition: background-color 0.2s ease, color 0.2s ease;
  }
  
  .gr-wishlist-button:hover,
  .gr-quickview-button:hover {
    background-color: {{ settings.gr_color_principal }};
    color: white;
  }
  
  .gr-wishlist-button.in-wishlist {
    background-color: {{ settings.gr_color_principal }};
    color: white;
  }
  
  .gr-product-content {
    padding: 15px;
  }
  
  .gr-product-title {
    margin: 0 0 10px;
    font-size: 1em;
  }
  
  .gr-product-title a {
    text-decoration: none;
    color: {{ settings.gr_color_secundario }};
    transition: color 0.2s ease;
  }
  
  .gr-product-title a:hover {
    color: {{ settings.gr_color_principal }};
  }
  
  .gr-product-price {
    margin-bottom: 10px;
  }
  
  .gr-product-price-sale {
    color: {{ settings.gr_color_principal }};
    font-weight: bold;
    margin-right: 5px;
  }
  
  .gr-product-price-compare {
    text-decoration: line-through;
    color: #777;
    font-size: 0.9em;
  }
  
  .gr-product-price-regular {
    font-weight: bold;
  }
  
  .gr-product-rating {
    display: flex;
    align-items: center;
    margin-bottom: 15px;
  }
  
  .gr-stars {
    display: flex;
    margin-right: 5px;
  }
  
  .gr-star {
    color: #ccc;
  }
  
  .gr-star-filled {
    color: {{ settings.gr_color_principal }};
  }
  
  .gr-rating-count {
    font-size: 0.8em;
    color: #777;
  }
  
  .gr-add-to-cart-button {
    width: 100%;
    padding: 10px;
    background-color: {{ settings.gr_color_principal }};
    color: white;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    transition: background-color 0.2s ease;
  }
  
  .gr-add-to-cart-button:hover {
    background-color: {{ settings.gr_color_secundario }};
  }
  
  .gr-add-to-cart-button:disabled {
    background-color: #ccc;
    cursor: not-allowed;
  }
  
  .gr-products-footer {
    text-align: center;
    margin-top: 20px;
  }
  
  .gr-view-all-link {
    display: inline-block;
    padding: 10px 20px;
    background-color: {{ settings.gr_color_principal }};
    color: white;
    text-decoration: none;
    border-radius: 4px;
    transition: background-color 0.2s ease;
  }
  
  .gr-view-all-link:hover {
    background-color: {{ settings.gr_color_secundario }};
  }
</style>

{% schema %}
{
  "name": "GR Productos Destacados",
  "tag": "section",
  "class": "section",
  "settings": [
    {
      "type": "text",
      "id": "title",
      "label": "Título",
      "default": "Productos destacados"
    },
    {
      "type": "textarea",
      "id": "description",
      "label": "Descripción",
      "default": "Descubre nuestra selección de productos destacados"
    },
    {
      "type": "collection",
      "id": "collection",
      "label": "Colección"
    },
    {
      "type": "range",
      "id": "columns_desktop",
      "min": 1,
      "max": 5,
      "step": 1,
      "default": 4,
      "label": "Columnas en escritorio"
    },
    {
      "type": "range",
      "id": "max_products",
      "min": 2,
      "max": 12,
      "step": 1,
      "default": 4,
      "label": "Máximo de productos"
    },
    {
      "type": "text",
      "id": "add_to_cart_text",
      "label": "Texto del botón añadir al carrito",
      "default": "Añadir al carrito"
    },
    {
      "type": "text",
      "id": "adding_text",
      "label": "Texto durante la adición",
      "default": "Añadiendo..."
    },
    {
      "type": "text",
      "id": "added_text",
      "label": "Texto después de añadir",
      "default": "¡Añadido!"
    },
    {
      "type": "text",
      "id": "error_text",
      "label": "Texto de error",
      "default": "Error"
    },
    {
      "type": "text",
      "id": "sold_out_text",
      "label": "Texto de agotado",
      "default": "Agotado"
    },
    {
      "type": "text",
      "id": "view_all_text",
      "label": "Texto del botón ver todo",
      "default": "Ver todos los productos"
    },
    {
      "type": "url",
      "id": "view_all_link",
      "label": "Enlace del botón ver todo"
    }
  ],
  "presets": [
    {
      "name": "GR Productos Destacados"
    }
  ]
}
{% endschema %}
