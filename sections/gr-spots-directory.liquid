{% comment %}
Sección de directorio de spots de skate
{% endcomment %}

<div class="gr-spots-section py-12" id="gr-spots-container">
<div class="page-width">
 {% if section.settings.title != blank %}
   <h2 class="gr-section-title text-3xl font-bold text-center mb-4">{{ section.settings.title }}</h2>
 {% endif %}
 
 {% if section.settings.description != blank %}
   <div class="gr-section-description text-center text-gray-600 mb-8">{{ section.settings.description }}</div>
 {% endif %}
 
 {% if section.settings.show_filter %}
   <div class="gr-spots-filter flex justify-center mb-6">
     <label for="gr-spots-filter-select" class="mr-2 text-sm font-medium text-gray-700">Filtrar por:</label>
     <select id="gr-spots-filter-select" class="gr-spots-filter-select rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm">
       <option value="all">Todos los spots</option>
       <option value="street">Street</option>
       <option value="park">Park</option>
       <option value="bowl">Bowl</option>
       <option value="vert">Vert</option>
     </select>
   </div>
 {% endif %}
 
 <div class="gr-spots-loading text-center text-gray-500">Cargando spots...</div>
 
 <div class="gr-spots-grid hidden grid-cols-1 sm:grid-cols-2 lg:grid-cols-{{ section.settings.columns_desktop }} gap-6">
   <!-- Los spots se cargarán aquí dinámicamente -->
 </div>
</div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const spotsContainer = document.getElementById('gr-spots-container');
  const loadingElement = spotsContainer.querySelector('.gr-spots-loading');
  const spotsGrid = spotsContainer.querySelector('.gr-spots-grid');
  const filterSelect = document.getElementById('gr-spots-filter-select');
  
  let allSpots = [];
  
  const loadSpots = () => {
    if (window.granitoAPI) {
      // Cargar spots desde la API
      window.granitoAPI.getSpots()
        .then(response => {
          loadingElement.style.display = 'none';
          
          if (response.error) {
            spotsGrid.innerHTML = '<p>Error al cargar los spots.</p>';
            spotsGrid.style.display = 'block';
            return;
          }
          
          if (response.length === 0) {
            spotsGrid.innerHTML = '<p>No hay spots disponibles.</p>';
            spotsGrid.style.display = 'block';
            return;
          }
          
          allSpots = response;
          renderSpots(allSpots);
        })
        .catch(error => {
          console.error('Error al cargar spots:', error);
          loadingElement.textContent = 'Error al cargar los spots.';
        });
    } else {
      // Si la API no está disponible, mostrar spots estáticos de ejemplo
      loadingElement.style.display = 'none';
      
      // Datos de ejemplo
      allSpots = [
        {% for block in section.blocks %}
          {
            id: '{{ block.id }}',
            nombre: '{{ block.settings.nombre }}',
            tipo: '{{ block.settings.tipo }}',
            ciudad: '{{ block.settings.ciudad }}',
            imagen_url: '{{ block.settings.imagen | img_url: "master" }}'
          }{% unless forloop.last %},{% endunless %}
        {% endfor %}
      ];
      
      if (allSpots.length === 0) {
        spotsGrid.innerHTML = '<p>No hay spots disponibles.</p>';
        spotsGrid.style.display = 'block';
        return;
      }
      
      renderSpots(allSpots);
    }
  };
  
  const renderSpots = (spots) => {
    // Crear HTML para cada spot
    let spotsHTML = '';
    
    spots.forEach(spot => {
      spotsHTML += `
        <div class="gr-spot-card border border-gray-200 rounded-lg overflow-hidden shadow-md transition-transform transform hover:translate-y-[-5px] hover:shadow-lg" data-type="${spot.tipo || 'all'}">
          <a href="/pages/spot?id=${spot.id}" class="gr-spot-link block">
            <div class="gr-spot-image relative pb-[56.25%] overflow-hidden">
              <img src="${spot.imagen_url || '/placeholder.svg?height=300&width=300'}" alt="${spot.nombre}" loading="lazy" class="absolute top-0 left-0 w-full h-full object-cover transition-transform transform hover:scale-110">
            </div>
            <div class="gr-spot-info p-4 relative">
              <h3 class="gr-spot-name text-xl font-semibold">${spot.nombre}</h3>
              ${spot.ciudad ? `<p class="gr-spot-city text-gray-600">${spot.ciudad}</p>` : ''}
              ${spot.tipo ? `<span class="gr-spot-type absolute top-4 right-4 bg-indigo-600 text-white py-1 px-2 rounded-md text-xs uppercase">${spot.tipo}</span>` : ''}
            </div>
          </a>
        </div>
      `;
    });
    
    spotsGrid.innerHTML = spotsHTML;
    spotsGrid.style.display = 'grid';
  };
  
  // Filtrar spots
  if (filterSelect) {
    filterSelect.addEventListener('change', function() {
      const selectedType = this.value;
      
      if (selectedType === 'all') {
        renderSpots(allSpots);
      } else {
        const filteredSpots = allSpots.filter(spot => spot.tipo && spot.tipo.toLowerCase() === selectedType);
        renderSpots(filteredSpots);
      }
    });
  }
  
  // Cargar spots
  loadSpots();
});
</script>

{% style %}
.gr-spots-section {
  margin: 40px 0;
}

.gr-section-title {
  text-align: center;
  margin-bottom: 10px;
  color: {{ settings.gr_color_principal }};
}

.gr-section-description {
  text-align: center;
  margin-bottom: 30px;
  max-width: 800px;
  margin-left: auto;
  margin-right: auto;
}

.gr-spots-filter {
  margin-bottom: 20px;
  text-align: center;
}

.gr-spots-filter-select {
  padding: 8px;
  border: 1px solid #e5e5e5;
  border-radius: 4px;
  margin-left: 10px;
}

.gr-spots-loading {
  text-align: center;
  padding: 20px;
}

.gr-spots-grid {
  display: grid;
  grid-template-columns: repeat(1, 1fr);
  gap: 20px;
}

@media screen and (min-width: 750px) {
  .gr-spots-grid {
    grid-template-columns: repeat(2, 1fr);
  }
}

@media screen and (min-width: 990px) {
  .gr-spots-grid {
    grid-template-columns: repeat({{ section.settings.columns_desktop }}, 1fr);
  }
}

.gr-spot-card {
  border: 1px solid #e5e5e5;
  border-radius: 8px;
  overflow: hidden;
  transition: transform 0.3s ease, box-shadow 0.3s ease;
}

.gr-spot-card:hover {
  transform: translateY(-5px);
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
}

.gr-spot-link {
  text-decoration: none;
  color: inherit;
  display: block;
}

.gr-spot-image {
  width: 100%;
  padding-top: 56.25%; /* 16:9 aspect ratio */
  position: relative;
  overflow: hidden;
}

.gr-spot-image img {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
  transition: transform 0.3s ease;
}

.gr-spot-card:hover .gr-spot-image img {
  transform: scale(1.05);
}

.gr-spot-info {
  padding: 15px;
  position: relative;
}

.gr-spot-name {
  margin: 0 0 5px;
  font-size: 1.2em;
}

.gr-spot-city {
  margin: 0;
  color: #777;
  font-size: 0.9em;
}

.gr-spot-type {
  position: absolute;
  top: 15px;
  right: 15px;
  background-color: {{ settings.gr_color_principal }};
  color: white;
  padding: 3px 8px;
  border-radius: 4px;
  font-size: 0.8em;
  text-transform: uppercase;
}
{% endstyle %}

{% schema %}
{
"name": "GR Catálogo de Spots",
"tag": "section",
"class": "section",
"settings": [
{
  "type": "text",
  "id": "title",
  "label": "Título",
  "default": "Spots de Skate"
},
{
  "type": "textarea",
  "id": "description",
  "label": "Descripción",
  "default": "Descubre los mejores spots para patinar"
},
{
  "type": "checkbox",
  "id": "show_filter",
  "label": "Mostrar filtro por tipo",
  "default": true
},
{
  "type": "range",
  "id": "columns_desktop",
  "min": 1,
  "max": 4,
  "step": 1,
  "default": 3,
  "label": "Columnas en escritorio"
}
],
"blocks": [
{
  "name": "Spot",
  "type": "spot",
  "settings": [
    {
      "type": "text",
      "id": "nombre",
      "label": "Nombre",
      "default": "Nombre del Spot"
    },
    {
      "type": "select",
      "id": "tipo",
      "label": "Tipo",
      "options": [
        {
          "value": "street",
          "label": "Street"
        },
        {
          "value": "park",
          "label": "Park"
        },
        {
          "value": "bowl",
          "label": "Bowl"
        },
        {
          "value": "vert",
          "label": "Vert"
        }
      ],
      "default": "street"
    },
    {
      "type": "text",
      "id": "ciudad",
      "label": "Ciudad",
      "default": "Madrid"
    },
    {
      "type": "image_picker",
      "id": "imagen",
      "label": "Imagen"
    }
  ]
}
],
"presets": [
{
  "name": "GR Catálogo de Spots",
  "blocks": [
    {
      "type": "spot"
    },
    {
      "type": "spot"
    },
    {
      "type": "spot"
    }
  ]
}
]
}
{% endschema %}
