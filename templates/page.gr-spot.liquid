{% layout 'theme' %}

<div class="gr-spot-detail-page" id="gr-spot-detail-container">
  <div class="page-width">
    <div class="gr-spot-loading">Cargando información del spot...</div>
    
    <div class="gr-spot-detail" style="display: none;">
      &lt;!-- La información del spot se cargará aquí dinámicamente -->
    </div>
    
    <div class="gr-spot-map" style="display: none;">
      <h2>Ubicación</h2>
      <div class="gr-map-container">
        &lt;!-- El mapa se cargará aquí dinámicamente -->
      </div>
    </div>
    
    <div class="gr-spot-gallery" style="display: none;">
      <h2>Galería</h2>
      <div class="gr-gallery-grid">
        &lt;!-- Las imágenes se cargarán aquí dinámicamente -->
      </div>
    </div>
    
    <div class="gr-spot-features" style="display: none;">
      <h2>Características</h2>
      <div class="gr-features-list">
        &lt;!-- Las características se cargarán aquí dinámicamente -->
      </div>
    </div>
    
    <div class="gr-spot-reviews" style="display: none;">
      <h2>Opiniones</h2>
      <div class="gr-reviews-list">
        &lt;!-- Las opiniones se cargarán aquí dinámicamente -->
      </div>
      
      <div class="gr-review-form-container">
        <h3>Deja tu opinión</h3>
        <form id="gr-spot-review-form" class="gr-review-form">
          <div class="gr-form-field">
            <label for="gr-review-name">Nombre</label>
            <input type="text" id="gr-review-name" name="nombre" required>
          </div>
          
          <div class="gr-form-field">
            <label for="gr-review-rating">Valoración</label>
            <div class="gr-rating-input">
              <input type="radio" id="gr-star-5" name="valoracion" value="5" required>
              <label for="gr-star-5">★</label>
              <input type="radio" id="gr-star-4" name="valoracion" value="4">
              <label for="gr-star-4">★</label>
              <input type="radio" id="gr-star-3" name="valoracion" value="3">
              <label for="gr-star-3">★</label>
              <input type="radio" id="gr-star-2" name="valoracion" value="2">
              <label for="gr-star-2">★</label>
              <input type="radio" id="gr-star-1" name="valoracion" value="1">
              <label for="gr-star-1">★</label>
            </div>
          </div>
          
          <div class="gr-form-field">
            <label for="gr-review-comment">Comentario</label>
            <textarea id="gr-review-comment" name="comentario" rows="4" required></textarea>
          </div>
          
          <input type="hidden" name="spot_id" id="gr-spot-id">
          
          <button type="submit" class="gr-submit-button">Enviar opinión</button>
        </form>
      </div>
    </div>
    
    <div class="gr-back-link">
      <a href="/pages/spots" class="gr-button">Volver al catálogo</a>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Obtener el ID del spot de la URL
    const urlParams = new URLSearchParams(window.location.search);
    const spotId = urlParams.get('id');
    
    if (!spotId) {
      window.location.href = '/pages/spots';
      return;
    }
    
    const detailContainer = document.getElementById('gr-spot-detail-container');
    const loadingElement = detailContainer.querySelector('.gr-spot-loading');
    const detailElement = detailContainer.querySelector('.gr-spot-detail');
    const mapElement = detailContainer.querySelector('.gr-spot-map');
    const galleryElement = detailContainer.querySelector('.gr-spot-gallery');
    const featuresElement = detailContainer.querySelector('.gr-spot-features');
    const reviewsElement = detailContainer.querySelector('.gr-spot-reviews');
    const spotIdInput = document.getElementById('gr-spot-id');
    
    if (spotIdInput) {
      spotIdInput.value = spotId;
    }
    
    if (window.granitoAPI) {
      // Cargar información del spot desde la API
      window.granitoAPI.getSpotDetail(spotId)
        .then(response => {
          loadingElement.style.display = 'none';
          
          if (response.error) {
            detailElement.innerHTML = '<p>Error al cargar la información del spot.</p>';
            detailElement.style.display = 'block';
            return;
          }
          
          // Crear HTML para la información del spot
          const spot = response;
          
          let detailHTML = `
            <div class="gr-spot-header">
              <div class="gr-spot-header-image">
                <img src="${spot.imagen_url || '/placeholder.svg?height=500&width=800'}" alt="${spot.nombre}" loading="lazy">
              </div>
              <div class="gr-spot-header-info">
                <h1 class="gr-spot-name">${spot.nombre}</h1>
                ${spot.tipo ? `<span class="gr-spot-type">${spot.tipo}</span>` : ''}
                ${spot.ciudad ? `<p class="gr-spot-city"><strong>Ciudad:</strong> ${spot.ciudad}</p>` : ''}
                ${spot.direccion ? `<p class="gr-spot-address"><strong>Dirección:</strong> ${spot.direccion}</p>` : ''}
              </div>
            </div>
            
            ${spot.descripcion ? `
              <div class="gr-spot-description">
                <h2>Descripción</h2>
                <div class="gr-spot-description-content">${spot.descripcion}</div>
              </div>
            ` : ''}
          `;
          
          detailElement.innerHTML = detailHTML;
          detailElement.style.display = 'block';
          
          // Cargar mapa si existe
          if (spot.mapa_iframe) {
            mapElement.querySelector('.gr-map-container').innerHTML = spot.mapa_iframe;
            mapElement.style.display = 'block';
          }
          
          // Cargar galería si existe
          if (spot.galeria && spot.galeria.length > 0) {
            let galleryHTML = '';
            
            spot.galeria.forEach(imagen => {
              galleryHTML += `
                <div class="gr-gallery-item">
                  <img src="${imagen.url}" alt="${imagen.alt || spot.nombre}" loading="lazy">
                </div>
              `;
            });
            
            galleryElement.querySelector('.gr-gallery-grid').innerHTML = galleryHTML;
            galleryElement.style.display = 'block';
          }
          
          // Cargar características si existen
          if (spot.caracteristicas && spot.caracteristicas.length > 0) {
            let featuresHTML = '<ul class="gr-features-items">';
            
            spot.caracteristicas.forEach(caracteristica => {
              featuresHTML += `<li>${caracteristica}</li>`;
            });
            
            featuresHTML += '</ul>';
            
            featuresElement.querySelector('.gr-features-list').innerHTML = featuresHTML;
            featuresElement.style.display = 'block';
          }
          
          // Cargar opiniones si existen
          if (spot.opiniones && spot.opiniones.length > 0) {
            let reviewsHTML = '';
            
            spot.opiniones.forEach(opinion => {
              reviewsHTML += `
                <div class="gr-review-item">
                  <div class="gr-review-header">
                    <div class="gr-review-author">${opinion.nombre}</div>
                    <div class="gr-review-rating">
                      ${Array(5).fill().map((_, i) => 
                        i &lt; opinion.valoracion 
                          ? '<span class="gr-star gr-star-filled">★</span>' 
                          : '<span class="gr-star">☆</span>'
                      ).join('')}
                    </div>
                  </div>
                  <div class="gr-review-content">${opinion.comentario}</div>
                  <div class="gr-review-date">${new Date(opinion.fecha).toLocaleDateString()}</div>
                </div>
              `;
            });
            
            reviewsElement.querySelector('.gr-reviews-list').innerHTML = reviewsHTML;
            reviewsElement.style.display = 'block';
          } else {
            reviewsElement.querySelector('.gr-reviews-list').innerHTML = '<p>No hay opiniones todavía. ¡Sé el primero en opinar!</p>';
            reviewsElement.style.display = 'block';
          }
        })
        .catch(error => {
          console.error('Error al cargar información del spot:', error);
          loadingElement.textContent = 'Error al cargar la información del spot.';
        });
    } else {
      // Si la API no está disponible, mostrar datos estáticos de ejemplo
      loadingElement.style.display = 'none';
      
      // Datos de ejemplo
      const exampleSpot = {
        nombre: "Plaza de Colón",
        tipo: "Street",
        ciudad: "Madrid",
        direccion: "Plaza de Colón, 28001 Madrid",
        imagen_url: "/placeholder.svg?height=500&width=800",
        descripcion: "Uno de los spots más emblemáticos de Madrid. Cuenta con varios sets de escaleras, barandillas y gaps. Es un lugar muy concurrido por skaters locales y turistas.",
        mapa_iframe: '<iframe src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d235.01714581528807!2d-3.9562102425240697!3d40.57879044806804!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0xd4177bbd6647dab%3A0xa8cce795b8a422a7!2sGranito%20Skate%20Shop!5e1!3m2!1ses!2ses!4v1745425137485!5m2!1ses!2ses" width="100%" height="400" style="border:0;" allowfullscreen="" loading="lazy" referrerpolicy="no-referrer-when-downgrade"></iframe>',
        caracteristicas: [
          "Escaleras de 5 y 7 peldaños",
          "Barandillas",
          "Gaps",
          "Suelo liso",
          "Buena iluminación nocturna"
        ]
      };
      
      let detailHTML = `
        <div class="gr-spot-header">
          <div class="gr-spot-header-image">
            <img src="${exampleSpot.imagen_url}" alt="${exampleSpot.nombre}" loading="lazy">
          </div>
          <div class="gr-spot-header-info">
            <h1 class="gr-spot-name">${exampleSpot.nombre}</h1>
            <span class="gr-spot-type">${exampleSpot.tipo}</span>
            <p class="gr-spot-city"><strong>Ciudad:</strong> ${exampleSpot.ciudad}</p>
            <p class="gr-spot-address"><strong>Dirección:</strong> ${exampleSpot.direccion}</p>
          </div>
        </div>
        
        <div class="gr-spot-description">
          <h2>Descripción</h2>
          <div class="gr-spot-description-content">${exampleSpot.descripcion}</div>
        </div>
      `;
      
      detailElement.innerHTML = detailHTML;
      detailElement.style.display = 'block';
      
      // Mostrar mapa de ejemplo
      mapElement.querySelector('.gr-map-container').innerHTML = exampleSpot.mapa_iframe;
      mapElement.style.display = 'block';
      
      // Mostrar galería de ejemplo
      let galleryHTML = `
        <div class="gr-gallery-item">
          <img src="/placeholder.svg?height=300&width=400" alt="Vista general" loading="lazy">
        </div>
        <div class="gr-gallery-item">
          <img src="/placeholder.svg?height=300&width=400" alt="Escaleras" loading="lazy">
        </div>
        <div class="gr-gallery-item">
          <img src="/placeholder.svg?height=300&width=400" alt="Barandilla" loading="lazy">
        </div>
      `;
      
      galleryElement.querySelector('.gr-gallery-grid').innerHTML = galleryHTML;
      galleryElement.style.display = 'block';
      
      // Mostrar características de ejemplo
      let featuresHTML = '<ul class="gr-features-items">';
      
      exampleSpot.caracteristicas.forEach(caracteristica => {
        featuresHTML += `<li>${caracteristica}</li>`;
      });
      
      featuresHTML += '</ul>';
      
      featuresElement.querySelector('.gr-features-list').innerHTML = featuresHTML;
      featuresElement.style.display = 'block';
      
      // Mostrar opiniones de ejemplo
      let reviewsHTML = `
        <div class="gr-review-item">
          <div class="gr-review-header">
            <div class="gr-review-author">Carlos Rodríguez</div>
            <div class="gr-review-rating">
              <span class="gr-star gr-star-filled">★</span>
              <span class="gr-star gr-star-filled">★</span>
              <span class="gr-star gr-star-filled">★</span>
              <span class="gr-star gr-star-filled">★</span>
              <span class="gr-star">☆</span>
            </div>
          </div>
          <div class="gr-review-content">Muy buen spot para street. Las escaleras están en perfecto estado y hay mucho espacio para practicar.</div>
          <div class="gr-review-date">01/01/2023</div>
        </div>
        <div class="gr-review-item">
          <div class="gr-review-header">
            <div class="gr-review-author">Laura Gómez</div>
            <div class="gr-review-rating">
              <span class="gr-star gr-star-filled">★</span>
              <span class="gr-star gr-star-filled">★</span>
              <span class="gr-star gr-star-filled">★</span>
              <span class="gr-star">☆</span>
              <span class="gr-star">☆</span>
            </div>
          </div>
          <div class="gr-review-content">Está bien, pero suele haber mucha gente y a veces la policía te echa.</div>
          <div class="gr-review-date">15/02/2023</div>
        </div>
      `;
      
      reviewsElement.querySelector('.gr-reviews-list').innerHTML = reviewsHTML;
      reviewsElement.style.display = 'block';
    }
    
    // Manejar envío del formulario de opinión
    const reviewForm = document.getElementById('gr-spot-review-form');
    
    if (reviewForm) {
      reviewForm.addEventListener('submit', function(e) {
        e.preventDefault();
        
        const formData = new FormData(reviewForm);
        const reviewData = {
          nombre: formData.get('nombre'),
          valoracion: parseInt(formData.get('valoracion')),
          comentario: formData.get('comentario'),
          spot_id: formData.get('spot_id')
        };
        
        if (window.granitoAPI) {
          window.granitoAPI.submitSpotReview(reviewData)
            .then(response => {
              if (response.error) {
                alert('Error al enviar la opinión. Por favor, inténtalo de nuevo.');
                return;
              }
              
              alert('¡Gracias por tu opinión!');
              reviewForm.reset();
              
              // Recargar la página para mostrar la nueva opinión
              window.location.reload();
            })
            .catch(error => {
              console.error('Error al enviar opinión:', error);
              alert('Error al enviar la opinión. Por favor, inténtalo de nuevo.');
            });
        } else {
          alert('¡Gracias por tu opinión! (Modo de demostración)');
          reviewForm.reset();
        }
      });
    }
  });
</script>

<style>
  .gr-spot-detail-page {
    margin: 40px 0;
  }
  
  .gr-spot-loading {
    text-align: center;
    padding: 20px;
  }
  
  .gr-spot-header {
    display: flex;
    flex-direction: column;
    gap: 20px;
    margin-bottom: 30px;
  }
  
  @media screen and (min-width: 750px) {
    .gr-spot-header {
      flex-direction: row;
      align-items: flex-start;
    }
    
    .gr-spot-header-image {
      flex: 0 0 60%;
    }
    
    .gr-spot-header-info {
      flex: 1;
      padding-left: 20px;
    }
  }
  
  .gr-spot-header-image {
    border-radius: 8px;
    overflow: hidden;
  }
  
  .gr-spot-header-image img {
    width: 100%;
    height: auto;
    display: block;
  }
  
  .gr-spot-name {
    margin-top: 0;
    margin-bottom: 15px;
    color: {{ settings.gr_color_principal }};
  }
  
  .gr-spot-type {
    display: inline-block;
    background-color: {{ settings.gr_color_principal }};
    color: white;
    padding: 5px 10px;
    border-radius: 4px;
    font-size: 0.9em;
    text-transform: uppercase;
    margin-bottom: 15px;
  }
  
  .gr-spot-description,
  .gr-spot-map,
  .gr-spot-gallery,
  .gr-spot-features,
  .gr-spot-reviews {
    margin-bottom: 30px;
  }
  
  .gr-spot-description h2,
  .gr-spot-map h2,
  .gr-spot-gallery h2,
  .gr-spot-features h2,
  .gr-spot-reviews h2 {
    color: {{ settings.gr_color_principal }};
    margin-bottom: 15px;
  }
  
  .gr-map-container {
    border-radius: 8px;
    overflow: hidden;
  }
  
  .gr-gallery-grid {
    display: grid;
    grid-template-columns: repeat(1, 1fr);
    gap: 15px;
  }
  
  @media screen and (min-width: 750px) {
    .gr-gallery-grid {
      grid-template-columns: repeat(3, 1fr);
    }
  }
  
  .gr-gallery-item {
    border-radius: 8px;
    overflow: hidden;
  }
  
  .gr-gallery-item img {
    width: 100%;
    height: auto;
    display: block;
  }
  
  .gr-features-items {
    list-style-type: none;
    padding: 0;
    margin: 0;
  }
  
  .gr-features-items li {
    padding: 8px 0;
    border-bottom: 1px solid #e5e5e5;
    position: relative;
    padding-left: 25px;
  }
  
  .gr-features-items li:before {
    content: "✓";
    color: {{ settings.gr_color_principal }};
    position: absolute;
    left: 0;
  }
  
  .gr-review-item {
    border: 1px solid #e5e5e5;
    border-radius: 8px;
    padding: 15px;
    margin-bottom: 15px;
  }
  
  .gr-review-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 10px;
  }
  
  .gr-review-author {
    font-weight: bold;
  }
  
  .gr-review-rating {
    color: #ccc;
  }
  
  .gr-star-filled {
    color: {{ settings.gr_color_principal }};
  }
  
  .gr-review-content {
    margin-bottom: 10px;
  }
  
  .gr-review-date {
    font-size: 0.8em;
    color: #777;
    text-align: right;
  }
  
  .gr-review-form-container {
    margin-top: 30px;
    padding: 20px;
    border: 1px solid #e5e5e5;
    border-radius: 8px;
  }
  
  .gr-form-field {
    margin-bottom: 15px;
  }
  
  .gr-form-field label {
    display: block;
    margin-bottom: 5px;
  }
  
  .gr-form-field input,
  .gr-form-field textarea {
    width: 100%;
    padding: 8px;
    border: 1px solid #e5e5e5;
    border-radius: 4px;
  }
  
  .gr-rating-input {
    display: flex;
    flex-direction: row-reverse;
    justify-content: flex-end;
  }
  
  .gr-rating-input input {
    display: none;
  }
  
  .gr-rating-input label {
    font-size: 1.5em;
    color: #ccc;
    cursor: pointer;
    margin-right: 5px;
  }
  
  .gr-rating-input label:hover,
  .gr-rating-input label:hover ~ label,
  .gr-rating-input input:checked ~ label {
    color: {{ settings.gr_color_principal }};
  }
  
  .gr-submit-button {
    background-color: {{ settings.gr_color_principal }};
    color: white;
    border: none;
    padding: 10px 15px;
    border-radius: 4px;
    cursor: pointer;
    transition: background-color 0.2s ease;
  }
  
  .gr-submit-button:hover {
    background-color: {{ settings.gr_color_secundario }};
  }
  
  .gr-back-link {
    margin-top: 30px;
    text-align: center;
  }
  
  .gr-button {
    display: inline-block;
    background-color: {{ settings.gr_color_principal }};
    color: white;
    padding: 10px 20px;
    border-radius: 4px;
    text-decoration: none;
    transition: background-color 0.2s ease;
  }
  
  .gr-button:hover {
    background-color: {{ settings.gr_color_secundario }};
  }
</style>
